#!/bin/bash

# script/console: Launch a console for the application. Optionally allow an
#                 environment to be passed in to let the script handle the
#                 specific requirements for connecting to a console for that
#                 environment.

set -e

cd "$(dirname "$0")/.."

. .env/bin/activate

if [ -n "$1" ]; then
    # use first argument as an environment name. Use this to decide how to connect
    # to the appropriate console.

    if [ "$1" = "production" ]; then
        echo "xxx No production environment yet!"

    elif [ "$1" = "staging" ]; then
        echo "xxx No staging environment yet!"

    elif [ "$1" = "db" ]; then
        echo "==> DB shellâ€¦"
        python manage.py dbshell

    else
        echo "Sorry, I don't know how to connect to the '$1' environment."
        exit 1

    fi

else
    # no argument provided, so just run the local console in the development
    # environment. Ensure the application is up to date first.
    script/update
    python manage.py shell

fi
